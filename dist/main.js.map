{"version":3,"sources":["../main.js"],"names":["app","baseURL","getEndpoint","id","type","limit","offset","query","stringify","encode","resolve","encodeURIComponent","getSights","url","json","headers","getCityID","options","transform","body","load","Promise","reject","then","$","attr","split","pop","catch","get","req","res","name","version","authors","params","console","log","data","length","error","listen","process","env","port"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA,IAAMC,UAAU,6BAAhB;;AAEA,SAASC,WAAT,CAAqBC,EAArB,EAAoE;AAAA,QAA3CC,IAA2C,uEAApC,QAAoC;AAAA,QAA1BC,KAA0B,uEAAlB,IAAkB;AAAA,QAAZC,MAAY,uEAAH,CAAG;;AAChE,QAAMC,QAAQ,aAAGC,SAAH,CAAa;AACvB,yCAAiCJ,IADV;AAEvB,+CAAuCD,EAFhB;AAGvB,uBAAeE,KAHQ;AAIvB,wBAAgBC;AAJO,KAAb,EAKX,EAACG,QAAQ,KAAT,EALW,CAAd;;AAOA,WAAO,cAAIC,OAAJ,CAAYT,OAAZ,EAAqB,eAAaE,EAAb,kBAA8BQ,mBAAmB,WAAWJ,KAA9B,CAAnD,CAAP;AACH;;AAED,SAASK,SAAT,CAAmBT,EAAnB,EAAuB;AACnB,WAAO,8BAAG;AACNU,aAAKX,YAAYC,EAAZ,CADC;AAENW,cAAM,IAFA;AAGNC,iBAAS;AACL,4BAAgB;AADX;AAHH,KAAH,CAAP;AAOH;;AAED,SAASC,SAAT,CAAmBT,KAAnB,EAA0B;AACtB,QAAMU,UAAU;AACZJ,aAAK,cAAIH,OAAJ,CAAYT,OAAZ,EAAqBM,KAArB,CADO;AAEZW,mBAAW,mBAACC,IAAD,EAAU;AACjB,mBAAO,kBAAQC,IAAR,CAAaD,IAAb,CAAP;AACH;AAJW,KAAhB;;AAOA,WAAO,IAAIE,OAAJ,CAAY,UAAUX,OAAV,EAAmBY,MAAnB,EAA2B;AAC1C,sCAAGL,OAAH,EACKM,IADL,CACU,aAAK;AACPb,oBAAQc,EAAE,eAAF,EAAmBC,IAAnB,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsC,GAAtC,EAA2CC,GAA3C,EAAR;AACH,SAHL,EAIKC,KAJL,CAIWN,MAJX;AAKH,KANM,CAAP;AAOH;;AAEDtB,IAAI6B,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIjB,IAAJ,CAAS;AACLkB,cAAM,mBADD;AAELC,iBAAS,OAFJ;AAGLC,iBAAS,CACL,4BADK,EAEL,2BAFK,EAGL,8BAHK;AAHJ,KAAT;AASH,CAVD;;AAYAlC,IAAI6B,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9Bf,cAAUc,IAAIK,MAAJ,CAAW5B,KAAX,GAAmBuB,IAAIK,MAAJ,CAAW,CAAX,CAA7B,EACKZ,IADL,CACU,cAAM;AACR,eAAOX,UAAUT,EAAV,CAAP;AACH,KAHL,EAIKoB,IAJL,CAIU,gBAAQ;AACVa,gBAAQC,GAAR,CAAYC,KAAKA,IAAL,CAAUC,MAAtB;AACAR,YAAIjB,IAAJ,CAASwB,IAAT;AACH,KAPL,EAQKV,KARL,CAQWQ,QAAQI,KARnB;AASH,CAVD;;AAYAxC,IAAIyC,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B","file":"main.js","sourcesContent":["import url from 'url';\r\nimport cheerio from 'cheerio';\r\nimport express from 'express';\r\nimport qs from 'qs';\r\nimport rp from 'request-promise';\r\n\r\nconst app = express();\r\n\r\nconst baseURL = 'http://www.lonelyplanet.com';\r\n\r\nfunction getEndpoint(id, type = 'sights', limit = 1000, offset = 0) {\r\n    const query = qs.stringify({\r\n        'filter[poi][poi_type][equals]': type,\r\n        'filter[poi][place_id][has_ancestor]': id,\r\n        'page[limit]': limit,\r\n        'page[offset]': offset\r\n    }, {encode: false});\r\n\r\n    return url.resolve(baseURL, `a/poi-sig/${id}?resource=` + encodeURIComponent('/pois?' + query))\r\n}\r\n\r\nfunction getSights(id) {\r\n    return rp({\r\n        url: getEndpoint(id),\r\n        json: true,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nfunction getCityID(query) {\r\n    const options = {\r\n        url: url.resolve(baseURL, query),\r\n        transform: (body) => {\r\n            return cheerio.load(body)\r\n        }\r\n    };\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        rp(options)\r\n            .then($ => {\r\n                resolve($('.sights__more').attr('href').split('/').pop());\r\n            })\r\n            .catch(reject)\r\n    })\r\n}\r\n\r\napp.get('/', (req, res) => {\r\n    res.json({\r\n        name: 'lonely planet api',\r\n        version: '0.0.1',\r\n        authors: [\r\n            'Rasmus NÃ¸rskov (rhnorskov)',\r\n            'Mathias Wieland (cuntbag)',\r\n            'Andreas Sommerset (flapjack)'\r\n        ]\r\n    })\r\n});\r\n\r\napp.get('/:query*', (req, res) => {\r\n    getCityID(req.params.query + req.params[0])\r\n        .then(id => {\r\n            return getSights(id)\r\n        })\r\n        .then(data => {\r\n            console.log(data.data.length);\r\n            res.json(data)\r\n        })\r\n        .catch(console.error);\r\n});\r\n\r\napp.listen(process.env.port || 3000);\r\n\r\n\r\n"]}